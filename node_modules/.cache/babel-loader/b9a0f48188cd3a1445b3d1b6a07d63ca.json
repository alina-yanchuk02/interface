{"ast":null,"code":"import _classCallCheck from \"/home/alina/Desktop/UA/MEI/Tese/GIT/estigma/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alina/Desktop/UA/MEI/Tese/GIT/estigma/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alina/Desktop/UA/MEI/Tese/GIT/estigma/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alina/Desktop/UA/MEI/Tese/GIT/estigma/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alina/Desktop/UA/MEI/Tese/GIT/estigma/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alina/Desktop/UA/MEI/Tese/GIT/estigma/src/components/Graphs/DoughnutChart.js\";\nimport React from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nvar DoughnutChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(DoughnutChart, _React$Component);\n\n  function DoughnutChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DoughnutChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DoughnutChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getOption = function () {\n      return {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: '5%',\n          left: 'center',\n          textStyle: {\n            fontSize: 16,\n            fontFamily: 'Verdana, Geneva, Tahoma, sans-serif'\n          }\n        },\n        series: [{\n          color: [\"#f4d35e\", \"#4361ee\"],\n          name: 'Total de artigos com sentido',\n          type: 'pie',\n          radius: ['60%', '40%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: 'black',\n            borderWidth: 2\n          },\n          textStyle: {\n            fontSize: 16,\n            fontFamily: 'Verdana, Geneva, Tahoma, sans-serif'\n          },\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '40',\n              fontWeight: 'bold',\n              formatter: function formatter(d) {\n                return d.name + \" \" + Math.round(d.value / 978 * 100, 2) + \"%\";\n              }\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: [{\n            value: 510,\n            name: 'Estigmatizante'\n          }, {\n            value: 468,\n            name: 'Literal'\n          }]\n        }]\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(DoughnutChart, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          height: \"520px\",\n          width: \"480px\",\n          marginLeft: \"20px\",\n          marginTop: \"50px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return DoughnutChart;\n}(React.Component);\n\nexport default DoughnutChart;","map":{"version":3,"sources":["/home/alina/Desktop/UA/MEI/Tese/GIT/estigma/src/components/Graphs/DoughnutChart.js"],"names":["React","ReactEcharts","DoughnutChart","getOption","tooltip","trigger","legend","top","left","textStyle","fontSize","fontFamily","series","color","name","type","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","position","emphasis","fontWeight","formatter","d","Math","round","value","labelLine","data","height","width","marginLeft","marginTop","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;IAEMC,a;;;;;;;;;;;;;;;;UAIFC,S,GAAY;AAAA,aAAO;AACfC,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE;AADJ,SADM;AAIbC,QAAAA,MAAM,EAAE;AACNC,UAAAA,GAAG,EAAE,IADC;AAENC,UAAAA,IAAI,EAAE,QAFA;AAGNC,UAAAA,SAAS,EAAE;AACTC,YAAAA,QAAQ,EAAE,EADD;AAETC,YAAAA,UAAU,EAAE;AAFH;AAHL,SAJK;AAabC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,CADT;AAEEC,UAAAA,IAAI,EAAE,8BAFR;AAGEC,UAAAA,IAAI,EAAE,KAHR;AAIEC,UAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CAJV;AAKEC,UAAAA,iBAAiB,EAAE,KALrB;AAMEC,UAAAA,SAAS,EAAE;AACTC,YAAAA,YAAY,EAAE,EADL;AAETC,YAAAA,WAAW,EAAE,OAFJ;AAGTC,YAAAA,WAAW,EAAE;AAHJ,WANb;AAWEZ,UAAAA,SAAS,EAAE;AACTC,YAAAA,QAAQ,EAAE,EADD;AAETC,YAAAA,UAAU,EAAE;AAFH,WAXb;AAeEW,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE,KADD;AAELC,YAAAA,QAAQ,EAAE;AAFL,WAfT;AAmBEC,UAAAA,QAAQ,EAAE;AACRH,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,IADD;AAELb,cAAAA,QAAQ,EAAE,IAFL;AAGLgB,cAAAA,UAAU,EAAE,MAHP;AAILC,cAAAA,SAAS,EAAE,mBAASC,CAAT,EAAY;AACrB,uBAAOA,CAAC,CAACd,IAAF,GAAO,GAAP,GAAWe,IAAI,CAACC,KAAL,CAAaF,CAAC,CAACG,KAAF,GAAQ,GAAT,GAAc,GAA1B,EAAgC,CAAhC,CAAX,GAA8C,GAArD;AACD;AANI;AADC,WAnBZ;AA6BEC,UAAAA,SAAS,EAAE;AACTT,YAAAA,IAAI,EAAE;AADG,WA7Bb;AAgCEU,UAAAA,IAAI,EAAE,CACJ;AAAEF,YAAAA,KAAK,EAAE,GAAT;AAAcjB,YAAAA,IAAI,EAAE;AAApB,WADI,EAEJ;AAAEiB,YAAAA,KAAK,EAAE,GAAT;AAAcjB,YAAAA,IAAI,EAAE;AAApB,WAFI;AAhCR,SADM;AAbK,OAAP;AAAA,K;;;;;;;6BAsDH;AACL,0BACI,oBAAC,YAAD;AACI,QAAA,MAAM,EAAE,KAAKX,SAAL,EADZ;AAEI,QAAA,KAAK,EAAE;AAAE+B,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE,OAA1B;AAAmCC,UAAAA,UAAU,EAAC,MAA9C;AAAsDC,UAAAA,SAAS,EAAC;AAAhE,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAME;;;;EAjEkBrC,KAAK,CAACsC,S;;AAoElC,eAAepC,aAAf","sourcesContent":["import React from 'react'\nimport ReactEcharts from 'echarts-for-react'\n\nclass DoughnutChart extends React.Component {\n\n \n\n    getOption = () => ({\n        tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            top: '5%',\n            left: 'center',\n            textStyle: {\n              fontSize: 16,\n              fontFamily: 'Verdana, Geneva, Tahoma, sans-serif',\n            },\n          \n          },\n          series: [\n            {\n              color: [\"#f4d35e\", \"#4361ee\"],\n              name: 'Total de artigos com sentido',\n              type: 'pie',\n              radius: ['60%', '40%'],\n              avoidLabelOverlap: false,\n              itemStyle: {\n                borderRadius: 10,\n                borderColor: 'black',\n                borderWidth: 2\n              },\n              textStyle: {\n                fontSize: 16,\n                fontFamily: 'Verdana, Geneva, Tahoma, sans-serif',\n              },\n              label: {\n                show: false,\n                position: 'center'\n              },\n              emphasis: {\n                label: {\n                  show: true,\n                  fontSize: '40',\n                  fontWeight: 'bold',\n                  formatter: function(d) {\n                    return d.name+\" \"+Math.round(((d.value/978)*100), 2)+\"%\";\n                  }\n                }\n              },\n              labelLine: {\n                show: false\n              },\n              data: [\n                { value: 510, name: 'Estigmatizante' },\n                { value: 468, name: 'Literal' },\n              ]\n            }\n          ]\n    });\n\n    render() {\n        return (\n            <ReactEcharts\n                option={this.getOption()}\n                style={{ height: \"520px\", width: \"480px\", marginLeft:\"20px\", marginTop:\"50px\"}}\n            \n            />\n        )};\n}\n\nexport default DoughnutChart"]},"metadata":{},"sourceType":"module"}